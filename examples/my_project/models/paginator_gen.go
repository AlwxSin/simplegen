// Code generated by github.com/AlwxSin/simplegen, DO NOT EDIT.
package models

import (
	"strconv"
)

// UserListPaginated represents User list in a pagination container.
type UserListPaginated struct {
	CurrentCursor *string `json:"currentCursor"`
	NextCursor    *string `json:"nextCursor"`
	Results       []*User `json:"results"`

	isPaginated bool
	limit       int
	offset      int
}

// NewUserListPaginated returns paginated User list if able to parse PaginateOptions.
func NewUserListPaginated(paginateOptions PaginateOptions) (*UserListPaginated, error) {
	offset := 0
	if paginateOptions.Cursor != nil {
		o, err := strconv.Atoi(*paginateOptions.Cursor)
		if err != nil {
			return nil, err
		}
		offset = o
	}
	return &UserListPaginated{
		Results:       make([]*User, 0),
		CurrentCursor: paginateOptions.Cursor,
		isPaginated:   paginateOptions.IsPaginated(),
		limit:         paginateOptions.Limit,
		offset:        offset,
	}, nil
}
